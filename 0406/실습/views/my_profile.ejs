<!doctype html>
<html lang="ko">
<head>
    <%- include('./includes/header.ejs') %>
    <title>회원 정보 수정</title>
</head>
<body>
<div class="hero is-fullheight ">
    <h1>회원 정보 수정 </h1>
    <div class="hero-body is-justify-content-center is-align-items-center">
        <div class="columns is-flex is-flex-direction-column box">
            <div class="column">
                <h2><%= pageTitle %></h2>
                <h2 class='is-size-4'>안녕하세요 <strong id='title'>
                        <%= userName %>
                    </strong>
                                      님
                </h2>
            </div>
            <form name='edit'>
                <div class='edit-form' style='display: none'>
                    <div class="column">
                        <label class="label" for="id">아이디</label>
                        <div class="control has-icons-left has-icons-right">
                            <input class="input is-primary" type="text" name='userId' id='id'
                                   value='<%= userId %>'>
                            <span class="icon is-small is-left"><i class="fas fa-user"></i></span>
                            <span class="icon is-small is-right"><i class="fas fa-check"></i></span>
                        </div>
                        <p class="help is-success" id="idCorrect" style='display: none'>사용할 수 없는 아이디입니다.</p>
                    </div>
                    <div class="column">
                        <label class="label" for="password">비밀번호</label>
                        <div class="control has-icons-left has-icons-right">
                            <input class="input is-primary" type="password" name="userPw" id="pw"
                                   value='<%= userPw; %>'>
                            <span class="icon is-small is-left"><i class="fas fa-lock"></i></span>
                            <span class="icon is-small is-right"><i class="fas fa-check"></i></span>
                        </div>

                    </div>
                    <div class="column">
                        <label for="name" class='label'>이름</label>
                        <div class="control has-icons-left has-icons-right">
                            <input class="input is-primary" type="text" name='userName' id='name'
                                   value='<%= userName %>'>
                            <span class="icon is-small is-left"><i class="fas fa-user-circle"></i></span>
                            <span class="icon is-small is-right"><i class="fas fa-check"></i></span>
                        </div>
                    </div>

                    <div class='column pl-4 p-2'>
                        <p id="editCorrect" class='is-fullwidth has-text-danger' style='display: none'>변경된 사항이..없는거
                                                                                                       같아요</p>
                    </div>
                    <div class="column is-flex is-justify-content-space-between 0">
                        <button class="button m-2 is-flex-grow-1 is-info is-light is-hovered" type="button"
                                id='confirm'>수정
                        </button>
                        <button class="button m-2 is-flex-grow-1 is-light " type="button" id='cancel'>취소</button>
                    </div>
                </div>
            </form>
            <div class="column ">
                <button class="button is-primary is-fullwidth" type="button" id='btn'>정보 수정</button>
            </div>

            <p class='has-text-centered has-text-primary' id='hasSuccessText' style='display: none
'>성공적으로 수정 되었습니다.</p>
            <div class="has-text-right mr-3">
<!--                <p><a class="help has-text-grey-light" id='delete'>계정 해지 하기</a>-->
                <p><span class="help has-text-grey-light" id='delete'>계정 해지 하기</span>
                </p>
            </div>
        </div>
    </div>
</div>
<%- include('includes/footer.ejs') %>
<script>
    const btn = document.querySelector('#btn');
    const cancel = document.querySelector('#cancel');
    const confirm = document.querySelector('#confirm');
    const editForm = document.querySelector('.edit-form');
    const form = document.forms['edit'];
    const editCorrect = document.querySelector('#editCorrect');
    const hasSuccessText = document.querySelector('#hasSuccessText');
    const title = document.querySelector('#title');
    const deleteBtn = document.querySelector('#delete');
    const {
        userId,
        userPw,
        userName,
    } = form;
    // input 칸 나타날때
    btn.addEventListener('click', (e) => {
        e.preventDefault;
        form[0].value = '<%= userId %>';
        form[1].value = '<%= userPw %>';
        form[2].value = '<%= userName %>';
        editForm.style.display = 'block';
        btn.style.display = 'none';
    });

    // input 칸 없애기
    function disapperEditForm () {
        form[0].value = '';
        form[1].value = '';
        form[2].value = '';
        editForm.style.display = 'none';
        btn.style.display = 'block';
    }

    cancel.addEventListener('click', function(e) {
        e.preventDefault();
        disapperEditForm();
    });
    //     userId.userPw,userName

    // 수정 버튼눌렀을 때 전송
    confirm.addEventListener('click', async (e) => {
        console.log('수정버튼 눌름');
        e.preventDefault();
        if (userId.value === '<%= userId %>' &&
            userPw.value === '<%= userPw %>' &&
            userName.value === '<%= userName %>') {
            editCorrect.style.display = 'block';
        } else {
            const response = await axios.patch('/patchUserInfo', {
                id:Number('<%= id %>'),
                userId:userId.value,
                pw:userPw.value,
                name:userName.value,
            });
            console.log('response', response.data);
            if (response.data.hasSuccess) {
                disapperEditForm();
                hasSuccessText.style.display = 'block';
                title.textContent = response.data.newName;
            }
        }
    });

    deleteBtn.addEventListener('click', async function() {
        // e.preventDefault();
        const result = await axios.delete('/my_profile/delete', { data:{ id:userId.value } });
        console.log(result);
        // alert('로그인 페이지로 이동합니다.');
        document.location.href = '/login'
        // response.then(
        //     (res) => {
        //         console.log(response, res);
        //     document.location.href = '/login';
        //     },
        // )
        // .then(() => {
        //     document.location.href = '/login';}
        // )
        });
</script>
</body>
</html>
