<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>Document</title>
</head>

<body>
<form name="visitor-form">
    <fieldset>
        <legend>방명록 등록</legend>
        <input type="text" id="name" placeholder="사용자 이름" /> <br />
        <input type="text" id="comment" placeholder="방명록" /> <br />
        <div id="button-group">
            <button type="button" onclick="createVisitor()">등록</button>
        </div>
    </fieldset>
</form>
<br />

<table border="1" cellspacing="0">
    <thead>
    <tr>
        <th>ID</th>
        <th>작성자</th>
        <th>방명록</th>
        <th>수정</th>
        <th>삭제</th>
    </tr>
    </thead>
    <tbody>
    <% for (let i = 0; i < data.length; i++) { %>
        <tr id="tr_<%= data[i].id; %>">
            <td><%= data[i].id; %></td>
            <td><%= data[i].name; %></td>
            <td><%= data[i].comment; %></td>
            <td>
                <button type="button" onclick="editVisitor('<%= data[i].id; %>')">
                    수정
                </button>
            </td>
            <td>
                <!--                <button class="button" type="button" onclick="deleteVisitor('<%= i; %>',this,'<%= data[i].id; %>')">-->
                <button class="button" type="button" onclick="deleteVisitor(this,'<%= data[i].id; %>')">
                    삭제
                </button>
            </td>
        </tr>
    <% } %>
    </tbody>
</table>
<script>
  const tbody = document.querySelector("tbody");
  const buttonGroup = document.querySelector("#button-group");
  // 1) 테이블 [수정] 버튼 클릭
  // form input 값 넣기
  // 변경 / 취소 버튼 보여주기
  function editVisitor (id) {
    console.log(id);
    axios.get("/visitor/get", { params:{ id:id } })
    .then((res) => {
      console.log(res);
      const form = document.forms["visitor-form"];
      form.name.value = res.data.name; // input[name='name']에 value 설정
      form.comment.value = res.data.comment; // input[name='comment']에 value 설정
      buttonGroup.innerHTML = `
      <button type="button" onclick="editDo(${ res.data.id })">변경</button>
      <button type="button" onclick="editCancel()">취소</button>
      `;
    });
  }

  // (2) [변경] 버튼 클릭시
  // - 데이터 수정 작업
  function editDo (id) {
    const form = document.forms["visitor-form"];

    axios({
      method:"PATCH",
      url:"/visitor/edit",
      data:{
        id:id,
        name:form.name.value,
        comment:form.comment.value
      }
    })
    .then((res) => {
      console.log(res.data);
      alert(res.data);
      const children = document.querySelector(`#tr_${ id }`).children;
      children[1].textContent = form.name.value;
      children[2].textContent = form.comment.value;
      form.name.value = '';
      form.comment.value = '';
    });
  }

  function editCancel () {
    // 취소 버튼 클릭시
    // - input 초기화
    // - 등록버튼 보이기
    // 1. 인풋 초기화
    const form = document.forms['visitor-form'];
    console.log(form);
    console.log(form.name);
    form.name.value = '';
    form.comment.value = '';
    // 2. 등록 버튼 보이기
    buttonGroup.innerHTML = `<button type="button" onclick=" createVisitor()">등록</button>`;
  }

  // function deleteVisitor (index, obj, id) {
  function deleteVisitor (obj, id) {
    console.log(obj);
    console.log(id);
    // console.log(document.querySelectorAll(".button")[index]);
    // const obj = document.querySelectorAll(".button")[index];
    if (!confirm("정말 삭제하시겠습니까 ?")) { //!false = true ( 취소 버튼을 누르면 )
      return;
    } else {
      //confirm 에서 [ 확인 버튼을 누르면 실행될 명령 ]
      axios.delete("/visitor/delete", {
        data:{
          id:id // 매개변수로 받고 있는 아이디
        }
      })
      .then((res) => {
        console.log(res.data);
        console.log(obj);
        // obj.parentElement.parentElement.remove();
        obj.closest("tr")
        .remove();

      });
    }
  }

  function createVisitor () {
    const form = document.forms["visitor-form"];
    axios.post(
      "/visitor/write",
      {
        name:form.name.value,
        comment:form.comment.value
      }
    )
    .then((res) => {
      console.log(res.data); // { id: n, name: 'x', comment: 'y' }
        // console.log(res.data.id);
        const newVisitor = `
          <tr id="tr_${ res.data.id }">
            <td>${ res.data.id }</td>
            <td>${ res.data.name }</td>
            <td>${ res.data.comment }</td>
            <td><button type="button" onclick="editVisitor(${ res.data.id })">수정</button></td>
            <td><button type="button" onclick="deleteVisitor(this,${ res.data.id })">삭제</button></td>
          </tr>`;
      // DOM 트리 element.insertAdjacentHTML(position, text);
      //   position 은 아래에 있는 단어만 사용 가능 : beforebegin,afterbegin,beforeend,afterend
      // innerHTML 과 다른점 : 내부 코드를 덮어 씌움
      tbody.insertAdjacentHTML("beforeend", newVisitor);
      form.name.value = '';
      form.comment.value = '';
    });
  }
</script>
</body>

</html>
